<style lang='sass'>
@import './styles/base.scss';
@import './styles/icon'
</style>

<script>
import wepy from 'wepy';
import 'wepy-async-function';
import tip from './http/tip';

export default class extends wepy.app {
  config = {
    pages: [
      'pages/home/home',
      'pages/ticket/ticket',
      'pages/mine/mine',
      'pages/buy_ticket/buy_ticket'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      color: '#999999',
      selectedColor: '#ff6a3c',
      backgroundColor: '#ffffff',
      borderStyle: 'black',
      list: [
        {
          pagePath: 'pages/home/home',
          text: '首页',
          iconPath: 'images/bus.png',
          selectedIconPath: 'images/bus_active.png'
        },
        {
          pagePath: 'pages/ticket/ticket',
          text: '车票',
          iconPath: 'images/qr_code.png',
          selectedIconPath: 'images/qr_code_active.png'
        },
        {
          pagePath: 'pages/mine/mine',
          text: '个人中心',
          iconPath: 'images/mine.png',
          selectedIconPath: 'images/mine_active.png'
        }
      ]
    }
  };

  globalData = {
    userInfo: null
  };
  constructor() {
    super();
    this.use('promisify');
    this.intercept('request', {
      // 发出请求时的回调函数
      config(p) {
        console.log('request:', p);
        // 必须返回OBJECT参数对象，否则无法发送请求到服务端
        return p;
      },
      // 请求成功后的回调函数
      success(p) {
        return p;
      },
      //请求失败后的回调函数
      fail(p) {
        tip.loaded();
        return p;
      },
      // 请求完成时的回调函数(请求成功或失败都会被执行)
      complete(p) {
        console.log('request complete: ', p);
      }
    });
  }

  onLaunch() {
    this.testAsync();
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved');
      }, s * 1000);
    });
  }

  async testAsync() {
    const data = await this.sleep(3);
    console.log(data);
  }

  getUserInfo(cb) {
    const that = this;
    if (this.globalData.userInfo) {
      return this.globalData.userInfo;
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo;
        cb && cb(res.userInfo);
      }
    });
  }
}
</script>
